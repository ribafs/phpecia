Lucas Marques Dutra

Marcus Brasizza em algum momento ele nao vai mais manter o codigo. N√£o existe mantimento de codigo eternamente.
O framework dele n√£o √© opensource e usado por mais gente al√©m dele.
√â bem improvavel que sozinho ele tenha implementado varios design patterns e ter ciclo de evolu√ß√£o tanto da aplica√ß√£o quanto do framework em si. Improvavel tamb√©m que seja um framework t√£o seguro e estavel quanto os ja existentes e mais usados.
Mas esses que citei s√£o apenas alguns dos problemas.
N√£o tem vantagem em usar FW proprio em produ√ß√£o pra clientes.

Lucas Marques Dutra
Marcus Brasizza eu sei mano. Eu conhe√ßo o trabalho do Pablo e da divulga√ß√£o que houve na √©poca do PHP-GTK, muito se deve a ele. Eu li os livros dele (e ainda tenho o do php-gtk).
Mas n√£o vejo os softwares que ele fez hoje com relev√¢ncia, pra n√£o dizer que a relevancia √© praticamente zero hoje.
E quanto ao que vc disse, Gabriel Domingos, discordo com veemencia, minha opini√£o pessoal.
Veja, hoje em dia tem Laminas, Laravel, Symfony, Lumen, Slim... N√£o tem o porqu√™ vc reinventar a roda (no caso de um framework √© bem "tentar" reinventar n√©). Vc nunca vai ter tempo de ficar implementando novas features no framework, documentar, cobrir por testes unit√°rios, cobrir por testes de integra√ß√£o, passar scanners de vulnerabilidades, ser compliant com as PSRs... N√£o adianta, ningu√©m √© um exercito de um homem s√≥. E um dia algu√©m vai ter que dar manuten√ß√£o no projeto do cliente que vc implementou o tal framework-proprio, essa pessoa n√£o vai saber utiliza-lo, ou vai achar ruim ou vai preferir o que todos usam, √© mais conveniente, se ela precisar de um pacote, ela d√° composer install, se ela precisar de ajuda, existe comunidade, se ela precisar olhar documenta√ß√£o, ela tem. Vai ser diferente do seu FW proprio. Provavelmente o que essa pessoa vai fazer quanto pegar seu projeto proprio √© jogar tudo fora e ser refeito do zero com solu√ß√µes j√° existentes, que s√£o usadas por muitos, cobertas por testes, compliants com recomenda√ß√µes/standards, com pessoas atualizando, tirando coisas depreciadas e tudo mais. Eu n√£o caio nesse papo de que framework pr√≥prio √© melhor, n√£o tem como ser. N√£o tem argumento que fundamente, √© s√≥ esse mesmo papo de "ah se meu codigo for bom ele vai durar mto tempo", n√£o tem isso. Pode ser bom PRA VC e ruim pra comunidade, saca? Pode ser otimo do teu ponto de vista e horr√≠vel pra performance, as vezes cheio de god-class e cheio de viola√ß√£o de SOLID. N√£o to dizendo que √© o caso do dele, mas que √© muito prov√°vel que n√£o tenha metade das coisas que citei.
Frameworks open source sofrem centenas e as vezes milhares de contribui√ß√µes. Fazer framework √© papo-s√©rio. Eu sei o quanto √© legal projetar fws, eu gosto, j√° fiz isso varias vezes ao longo dos anos como desenvolvedor. N√£o existe argumento s√≥lido que justifique. Eu vejo como irresponsabilidade t√©cnica no futuro.

"voc√™ nunca vai desenvolver produtos high end"
isso √© mentira.
Produtos "high end" usam solu√ß√µes existentes.
Faturar alto ou baixo independe disto. Geralmente quem fatura alto conhece mais tecnologias, e n√£o s√≥ a linguagem! üòâ
Esse outro papo de "tem tudo l√° inclusive o que n√£o precisa" √© discurso falso tamb√©m, pois PHP trabalha com namespaces e autoload de classes.
Vc sempre vai precisar do "core" da coisa, o resto EST√Å DISPON√çVEL para voc√™ usar, sem causar d√©bito t√©cnico.
N√£o √© porqu√™ tem um monte de facades por exemplo, que vai ser carregado sozinho o que vc n√£o precisa. Essas frase/discurso d√° a ideia de que "o framework tem muita coisa que vc n√£o vai usar, logo isso vai afetar na performance ou whatever" e isso √© mentira. O m√°ximo √© ocupar alguns megabytes de espa√ßo no HD, o que √© irrelevante. Se o PHP n√£o t√° explicitamente chamando, n√£o carregar, ent√£o n√£o tem d√©bito t√©cnico.
No caso do symfony e do laravel, isso √© bem explicito e tu pode tirar o que n√£o quiser e adicionar o que quiser, sem ter praticamente nenhum impacto. Ficar reinventando a roda √© tiro no p√© 100% das vezes a menos que voc√™ esteja criando algo completamente inovador ou espec√≠fico pro seu cen√°rio que n√£o tenha nenhuma tecnologia ou pacote que atenda.
Eu entendo a quest√£o de inventar FWs por hobby ou divers√£o, mas discordo que seja bom de algum jeito isso ir pra produ√ß√£o pra um cliente. Na minha opini√£o √© algo bem anti-profissional, inclusive, pelos v√°rios motivos que j√° citei.

Lucas Marques Dutra Boa. Grato por compartilhar. O pr√≥prio Rasmus detesta os frameworks, mas me parece que sua opini√£o n√£o se sustenta, pois os frameworks fazem muito e n√£o somente pelos iniciantes. Sem cotnar que contam com uma equipe de especialistas em v√°rias √°reas, que corrigem problemas com agilidade.


