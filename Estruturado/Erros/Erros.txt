PDO has three error handling modes.

    PDO::ERRMODE_SILENT acts like mysql_* where you must check each result and then look at $db->errorInfo(); to get the error details.
    PDO::ERRMODE_WARNING throws PHP Warnings
    PDO::ERRMODE_EXCEPTION throws PDOException. In my opinion this is the mode you should use. It acts very much like or die(mysql_error()); when it isn't caught, but unlike or die() the PDOException can be caught and handled gracefully if you choose to do so.

<?php
try {
    //connect as appropriate as above
    $db->query('hi'); //invalid query!
} catch(PDOException $ex) {
    echo "An Error occured!"; //user friendly message
    some_logging_function($ex->getMessage());
}

$dbh->setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION );

Em desenvolvimento:

ini_set('display_errors', 1);

Em produção
ini_set('display_errors', 0);
ini_set('log_errors', 1);

try {
    $pdo->prepare("INSERT INTO users VALUES (NULL,?,?,?,?)")->execute($data);
} catch (PDOException $e) {
    $existingkey = "Integrity constraint violation: 1062 Duplicate entry";
    if (strpos($e->getMessage(), $existingkey) !== FALSE) {
        // Take some action if there is a key constraint violation, i.e. duplicate name
    } else {
        throw $e;
    }
}


Tratamento de erro para quando o registro já existe:

if($e->getCode == 23000{
	print 'Registro já existe';
}

	function executeDML($sql, $arrayParametros, $conn)
	{
	   //echo "<pre>SQL= " .$sql. "</pre>";
	   //echo "<br>" . var_dump($this->conn);
	    try{
		$stmt = $conn->prepare($sql);
		
		for($i=0; $i<sizeof($arrayParametros); $i++)
		{
		    $stmt->bindParam($i+1, $arrayParametros[$i]);
		}
		$stmt->execute();
		
		}catch(PDOException $e) {
		   echo $e->getMessage();
		}
	}


Estou querendo criar a tabela abaixo:

CREATE TABLE estoques (
    id int primary key auto_increment,
    quantidade int not null,
    estoque_min int not null,
    data datetime,
    compra_id int not null,
	constraint compra_fk foreign key (compra_id) references compras(id)
)

E aparece o erro:

Erro na consulta (1005): Can't create table `estoque`.`estoques` (errno: 121 "Duplicate key on write or update")

Uma busca me levou à resposta: uma constraint tem onome duplicado, então mudei para

	constraint estoque_compra_fk foreign key (compra_id) references compras(id)

https://stackoverflow.com/questions/20512572/duplicate-key-on-write-or-update/35032031


